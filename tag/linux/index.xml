<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux | Joe Gardiner</title>
    <link>/tag/linux/</link>
      <atom:link href="/tag/linux/index.xml" rel="self" type="application/rss+xml" />
    <description>linux</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>linux</title>
      <link>/tag/linux/</link>
    </image>
    
    <item>
      <title>Automate Varnish cache purges</title>
      <link>/post/2016-05-11-how-to-automate-varnish-cache-purge/</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-05-11-how-to-automate-varnish-cache-purge/</guid>
      <description>&lt;p&gt;This guide shows you how to use the varnishadm command in your system crontab to automate Varnish cache purging.&lt;/p&gt;
&lt;p&gt;Access your server as root or switch to the root user. If you installed Varnish from a repo you will have all the Varnish utility commands installed as well. You need to make sure that varnishadm is installed so run the command now. You will get an output asking you for switches and arguments. This is correct.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;varnishadm usage: varnishadm [-t timeout] [-S secretfile] -T [address]:port command [...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Before going any further you may wish to read over the varnishadm manual pages, just to familiarise yourself with the command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;man varnishadm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As you can see from the man page you need to specify the host and secret file for issuing varnishadm commands. To purge the cache on local host you can use the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;varnishadm -T localhost:6082 -S /etc/varnish/secret url.purge .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let’s break this command apart.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;varnishadm -T localhost:6082&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Of course we’re using the varnishadm command. Next we define the host, look down the page for remote purges, for now as this is a local Varnish, localhost is fine. Finally we state the port that Varnish is listening on. You can check the port using the netstat command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;netstat -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Look for an unrecognised TCP command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Active Internet connections (only servers) **tcp 0 0 localhost:6082 _:_ LISTEN**&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next we have the path to the secret authentication file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-S /etc/varnish/secret&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It is very unlikely that you will have to alter this section.&lt;/p&gt;
&lt;p&gt;Finally we have the actual Varnish purge command. Again you won’t need to change this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url.purge .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Before adding the full command to the crontab to automate the task, run it in your terminal. You should see the command executing correctly without throwing any errors. If a connection error does show, check your port number again with netstat.&lt;/p&gt;
&lt;p&gt;If the command ran correctly you can now add it to your crontab. Copy the command then open the crontab editor (vim) with the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now press &lt;strong&gt;i&lt;/strong&gt; to enter &lt;strong&gt;INSERT&lt;/strong&gt; mode. You can now paste the command into the crontab.&lt;/p&gt;
&lt;p&gt;You need to choose how often to execute this command. The options for setting cron execution times are the subject of another guide so either Google it, or search this site for instructions. In the mean time (this is an unrealistic figure) let’s set the cron to run every minute. The cron tab entry will look like this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;* * * * * varnishadm -T localhost:6082 -S /etc/varnish/secret url.purge .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now press &lt;strong&gt;Escape&lt;/strong&gt;, then type &lt;strong&gt;:wq&lt;/strong&gt;. This will write the changes and then quit from crontab editor.&lt;/p&gt;
&lt;p&gt;That’s it, you’re done. You can stop here if you’re running a local Varnish. If not and you wish to issue cache purge commands from a remote host then keep reading.&lt;/p&gt;
&lt;h2 id=&#34;remote-purge-commands&#34;&gt;Remote purge commands&lt;/h2&gt;
&lt;p&gt;In order to allow remote connection you need to edit the Varnish config file on your server. Use whichever text editor you prefer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/varnish/default.vcl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You need to copy and paste the following into the default.vcl file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;acl purge { &amp;quot;*server IP*&amp;quot;; &amp;quot;*123.123.123.123*&amp;quot;; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You need to update the server IP to match the IP of the remote server you will be issuing purge commands from.&lt;/p&gt;
&lt;p&gt;Write and quit the changes and reload the config.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;service varnish reload&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now log in to the server you will be issuing commands from. We’re going to edit the crontab again using the same command as before. The only difference is that we are going to edit the host in the varnishadm command. So, in the crontab (with your own timing settings) paste the following&lt;/p&gt;
&lt;p&gt;&lt;code&gt;varnishadm -T *varnish-server-IP*:*port-from-netstat* -S /etc/varnish/secret url.purge .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;As you can see we have changed the IP and port to those of the target Varnish server. The rest of the command is the same.&lt;/p&gt;
&lt;p&gt;If you have any problems or questions about this guide leave a comment and I will do my best to help you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress .htaccess rules for Nginx</title>
      <link>/post/2016-05-03-wordpress-htaccess-rules-for-nginx/</link>
      <pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-05-03-wordpress-htaccess-rules-for-nginx/</guid>
      <description>&lt;p&gt;This guide shows you the equivalent .htaccess rewrite rules to get WordPress working properly with permalinks on the Nginx web server.&lt;/p&gt;
&lt;p&gt;There is no direct equivalent for .htaccess in Nginx, so you cannot copy and past the .htaccess rules that WordPress suggests when you change your permalink settings in the dashboard. Instead you need to add the following rules to you site local configuration file.&lt;/p&gt;
&lt;p&gt;You could put these rules in the global nginx.conf file, generally found at…&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;…but it is much better practice to have a single configuration file with local overrides for each site you are hosting on your Nginx server. Not only does this lead to granular management on a site by site basis, but it also avoids issues that may occur with multiple PHP apps (Drupal, Joomla! etc) each requiring slightly different rewrite rules.&lt;/p&gt;
&lt;p&gt;First of all either create or edit the configuration file for your site.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim /etc/nginx/sites-available/*website-name*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The standard configuration file looks something like this. This is the file used for &lt;strong&gt;sudoguides.com&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server { 
    #Add a server_name entry for each mapped domain 
    server_name sudoguides.com www.sudoguides.com; 
    server_name sudoguides.co.uk www.sudoguides.co.uk; 
    server_name sudoguides.net www.sudoguides.net; 
    
    access_log /srv/www/sudoguides.com/logs/access.log; 
    error_log /srv/www/sudoguides.com/logs/error.log; 
    
    root /srv/www/sudoguides.com/public_html; 
    location ~ .php$ { 
        include /etc/nginx/fastcgi_params; 
        fastcgi_pass 127.0.0.1:9000; 
        fastcgi_index index.php; 
        fastcgi_param SCRIPT_FILENAME /srv/www/sudoguides.com/public_html$fastcgi_script_name; 
        } 
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now for a single WordPress installation (not multisite) you need to add the following to this file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;if (!-e $request_filename) { rewrite ^.* /index.php break; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For a multisite WordPress installation you need to add this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# Rewrite for multi site files rewrite /files/(.+)$ /wp-includes/ms-files.php?file=$1 last; # Rewrite for wordpress if (!-e $request_filename) { rewrite ^(.+)$ /index.php?q=$1 last; }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After adding the rules remember to restart Nginx.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;service nginx restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Please note, after restarting Nginx you may need to reset your permalink settings in the WordPress dashboard. Just reselect the type of permalinks you want and click save again.&lt;/p&gt;
&lt;p&gt;As usual if you have any problems leave a comment and we will do our best to help you out!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Timeout Problems on a Virgin Media Super Hub version 2</title>
      <link>/post/2016-02-21-ssh-timeout-problems-on-a-virgin-media-super-hub-version-2/</link>
      <pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate>
      <guid>/post/2016-02-21-ssh-timeout-problems-on-a-virgin-media-super-hub-version-2/</guid>
      <description>&lt;p&gt;A commonly reported problem with the Virgin Media SuperHub is that an SSH connection will timeout. This is apparently due to the device having a very small amount of RAM leading to connection details being dropped.&lt;/p&gt;
&lt;p&gt;If you are using a Mac or a Linux computer there is a solution, as follows.&lt;/p&gt;
&lt;p&gt;First of all bring up a terminal on your respective machine. Then change to you .ssh directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd /Users/username/.ssh/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now create a local config file either using touch or just go straight into vim.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When the editor opens copy and paste the following into it. Remember to press &lt;strong&gt;i&lt;/strong&gt; to enter insert mode in vim.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# Site-wide defaults for various options Host * ServerAliveCountMax 600 ServerAliveInterval 10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then save and exit. Hit escape to exit insert mode in vim.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:wq&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now it’s probably a good idea to reboot your computer. Next time you try logging in with SSH, leave the terminal idle for a while and see if it times out. You should be fine! I’ve left my terminal open for hours with the connection remaining active.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing VMware Tools in a Centos / Scientific Linux / Red Hat guest</title>
      <link>/post/2012-05-27-installing-vmware-tools-in-a-centos-scientific-linux-red-hat-guest/</link>
      <pubDate>Sun, 27 May 2012 00:00:00 +0000</pubDate>
      <guid>/post/2012-05-27-installing-vmware-tools-in-a-centos-scientific-linux-red-hat-guest/</guid>
      <description>&lt;p&gt;Installing VMware tools in a rpm based guest can sometimes be tricky. Here is a quick and dirty guide to help you install VMware tools and get the most out of your Linux guest.&lt;/p&gt;
&lt;h4 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h4&gt;
&lt;p&gt;Of course the first thing you will need is a VMware software product (depending on your OS) capable of running guests. I use a Mac Book Air circa 2011 running Lion so I have VMware Fusion installed. You can get it from here if you also run a Mac: 
&lt;a href=&#34;http://www.vmware.com/uk/products/desktop_virtualization/fusion/overview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VMware Fusion&lt;/a&gt;. If you’re running Windows or Linux have a look at their 
&lt;a href=&#34;http://www.vmware.com/uk/products.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;products page&lt;/a&gt; to select the best option for you.&lt;/p&gt;
&lt;p&gt;Surprisingly you will then need to install a RPM based Linux guest. How to do that goes beyond the scope of this guide, I will presume you are able to do this. I may write a guide at a later date, but their are loads of tutorials online and in the VMware help guides.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Boot up your Linux VM and wait until you get to a stable desktop, if you are using one. If you installed your distro without a desktop environment you can still use the following commands (although you probably won’t need this guide if you prefer a CLI only OS!).&lt;/p&gt;
&lt;p&gt;When the OS is booted, have a look at the top of your VMware app window. There should be a toolbar, you want the tab called Virtual Machine. In this menu select ‘&lt;strong&gt;Install VMware Tools&lt;/strong&gt;‘. When you click this it will mount an ISO with the VMware tools package on it.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://images.grdnr.io/2012/03/Screen-Shot-2012-03-21-at-20.05.05.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://images.grdnr.io/2012/03/Screen-Shot-2012-03-21-at-20.05.05.png&#34; alt=&#34;VMware menu&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First switch to root.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You need to set the CD at a mount point so that you can copy over the VMware Tools files.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mount /dev/cdrom /mnt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now copy the files to your Desktop.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cp /mnt/VMwareTools-* /home/user/Desktop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Remember to use &lt;em&gt;Tab&lt;/em&gt; to auto complete the VMware Tools version, and change &lt;em&gt;user&lt;/em&gt; with your own username.&lt;/p&gt;
&lt;p&gt;Change to your Desktop so that you can extract the VMware Tools archive.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd /home/user/Desktop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now extract the archive.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tar -xzvf VMwareTools-*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Change to the extracted folder in order to run the VMware Tools installer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd vmware-tools-distrib/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Run the installer.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./vmware-install.pl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You will now be asked a lot of questions by the installer. Generally you can go with the default settings by pressing &lt;em&gt;Enter&lt;/em&gt; and everything will install correctly. The advanced settings of the installer are beyond the scope of this guide!&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://images.grdnr.io/2012/03/Screen-Shot-2012-03-22-at-18.27.29.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://images.grdnr.io/2012/03/Screen-Shot-2012-03-22-at-18.27.29.png&#34; alt=&#34;VMware Tools automated installer&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When the installer completes reboot your VM, either using the VMware Player / Fusion / Workstation settings, or with the following command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reboot&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When your Linux VM comes back online you will have all the advanced features of VMware tools such as directory sharing, clipboard sharing, graphics adapter interfacing, automatic resolution adjustment etc.&lt;/p&gt;
&lt;p&gt;Finally to remove those left over files on your Desktop. You will need to be root again.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;su -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Change to the Desktop.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd /home/user/Desktop/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then delete the files.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rm -f -R VMwareTools-* vmware-tools-distrib/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And you’re finished! Enjoy your Linux VM with VMware Tools!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External FTP NAS with the ZyXEL NSA310 Media Storage and a Super Hub</title>
      <link>/post/2012-05-02-external-ftp-nas-with-the-zyxel-nsa310-media-storage-and-a-super-hub/</link>
      <pubDate>Wed, 02 May 2012 00:00:00 +0000</pubDate>
      <guid>/post/2012-05-02-external-ftp-nas-with-the-zyxel-nsa310-media-storage-and-a-super-hub/</guid>
      <description>&lt;p&gt;I have a lot of films / music / software / games stored in various places and on various devices in my home. Keeping all this data organised is an absolute nightmare, and with a recent string of disk failures, I’ve also lost quite a lot of it. Following the recent death of an external 
&lt;a href=&#34;http://www.amazon.co.uk/s?url=search-alias%3Daps&amp;amp;field-keywords=external&amp;#43;usb&amp;#43;hard&amp;#43;drive&amp;amp;x=0&amp;amp;y=0&amp;amp;_encoding=UTF8&amp;amp;tag=shilon-21&amp;amp;linkCode=ur2&amp;amp;camp=1634&amp;amp;creative=6738&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;USB HD&lt;/a&gt; I was in the market for a newer model. Looking around it made sense to invest a little more in a NAS to centralise storage on my home network and offer the redundancy of RAID 1 (across two disks, the 4 bay NASs are a tad outside my budget!).&lt;/p&gt;
&lt;p&gt;The device I selected is the 
&lt;a href=&#34;http://www.amazon.co.uk/gp/product/B005LDM09U/ref=as_li_tf_tl?ie=UTF8&amp;amp;tag=joeg-21&amp;amp;linkCode=as2&amp;amp;camp=1634&amp;amp;creative=6738&amp;amp;creativeASIN=B005LDM09U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ZyXEL NSA310&lt;/a&gt;, mainly because it was a good price, but also because it has an SMB, FTP and NFS server built in, as well as a decently reviewed web admin panel. Setting it up on my network was incredibly simple. In the box is a setup utility disk that when installed, offers a ‘Quick Start’ wizard to take you through the basic steps to configure the NAS. This utility is Windows only, however it isn’t really required after the intial config.&lt;/p&gt;
&lt;p&gt;The NSA310 has a gigabit port in the back so my initial heavy data transfer went quite quickly at around 30 (peaking at 40) Mbps. I then setup the FTP server with a few users to allow external access. This was all completed through the web admin panel (when logged in as the admin user)…&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://images.grdnr.io/2011/11/ftp-admin.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://images.grdnr.io/2011/11/ftp-admin.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The only complication was to allow external network access to the FTP server was setting up port forwarding on my rubbish Virgin Media Super Hub. Setting up forwarding rules was actually very simple, but that doesn’t stop the Super Hub from being rubbish.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log into your Hub by IP (probably 192.168.0.1) and enter you login details.&lt;/li&gt;
&lt;li&gt;Click on the ‘Advanced Settings’ link at the bottom of the page.&lt;/li&gt;
&lt;li&gt;Under the advanced title in the sidebar, click on the Port Forwarding option. This will load the control panel for forwarding.&lt;/li&gt;
&lt;li&gt;Now you just need to fill out the fields to create a rule…&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://images.grdnr.io/2011/11/forwarding-table.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;strong&gt;Name:&lt;/strong&gt; You can call your rule anything you like. I called it NAS FTP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start Port -&amp;gt; End Port:&lt;/strong&gt; Enter 20 for the start port and 21 for the end port. These are the two ports FTP most commonly uses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Protocol:&lt;/strong&gt; The protocol is TCP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Local IP Address:&lt;/strong&gt; This is the IP of NAS on your network, in my case 192.168.0.100.&lt;/li&gt;
&lt;li&gt;Click Add, and then log out and you’re finished.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://images.grdnr.io/2011/11/forwarding-table-complete.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now you can FTP with the FTP user or admin user you created at your ISP IP and the FTP traffic will automatically be forwarded to your NAS by your router.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; I have written a follow up guide for connecting to your NAS using the FileZilla FTP cleint, it is available at, &amp;ldquo;
&lt;a href=&#34;/remotely-connecting-to-your-nas-with-ftp/&#34;&gt;Remotely connecting to your NAS&lt;/a&gt;&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Momentus XT Hard Drive</title>
      <link>/post/2012-04-07-new-momentus-xt-hard-drive/</link>
      <pubDate>Sat, 07 Apr 2012 00:00:00 +0000</pubDate>
      <guid>/post/2012-04-07-new-momentus-xt-hard-drive/</guid>
      <description>&lt;p&gt;My new Seagate Momentus XT hard drive turned up today! I bought it to breath new life into my old Toshiba laptop, and so far the signs are good. The Momentus XT is a standard 320GB 7,200 rpm disk, but it has an additional 4GB cache that remembers the files you use the most. The idea is that commonly used files are accessed on the flash memory, massively improving performance over the spindle element of the disk.&lt;/p&gt;
&lt;p&gt;I don’t have any specific benchmarks, but my Ubuntu install seems to boot a little quicker. &lt;img src=&#34;https://images.grdnr.io/2011/06/mometus-xt.jpg&#34; alt=&#34;&#34;&gt;The real noticeable performance is the speed in which the desktop becomes stable and disk access stops. This may because BIOS etc, keep the boot at a consistent time, but once Ubuntu begins to load it really is faster.&lt;/p&gt;
&lt;p&gt;My next test will be starting disk intensive applications such as Eclipse to check the boot times of these. This will be the real test and will hopefully help me decide if the invesment was really worth it. The only downside to installing this disk is that it is a tiny bit noisier, and some users have reported errors with power saving. There are also reported issues when running VMs. Apparently the Hypervisor will report corrupt data on some occassions. Fortunately these errors are most common on Mac and PC, so hopefully my resilient Ubuntu install will shrug any potential problems off.&lt;/p&gt;
&lt;p&gt;It looks as though there’s not much else I can do to help my old Tosh fight off the years. The next upgrade will be a new box I think, maybe one of these…&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.system76.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;img src=&#34;https://images.grdnr.io/2011/06/system76_laptop.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
